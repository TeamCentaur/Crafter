@(Html.Kendo().Grid<TeamCentaur_LiveChat.Areas.Admin.ViewModels.TutorialDisplayModel>()
    .Name("admin-grid")
    .Columns(columns =>
    {
        columns.Bound(model => model.Title);
        columns.Bound(model => model.Category);
        columns.Bound(model => model.User);
        columns.Command(command =>
            {
                command.Edit().Text("Edit Tutorial");
                command.Destroy().Text("Delete Tutorial");
            });
    })
    .ToolBar(tool =>
        {
            tool.Create().Text("Create Tutorial");
        })
    .Pageable()
    .Sortable(sort =>
        {
            sort.SortMode(GridSortMode.SingleColumn);
        })
        .Editable(edit =>
            {
                edit.Mode(GridEditMode.PopUp);
                edit.TemplateName("TutorialEdit");
            })
    .Groupable()
        .DataSource(data =>
            {
                data.Ajax()
                    .Model(m => m.Id(t => t.Id))
                    .PageSize(10)
                    .ServerOperation(true)
                    .Read("GetTutorials", "Admin", new { area = "Admin" })
                    .Update("UpdateTutorial", "Admin", new { area = "Admin" })
                    .Destroy("DeleteTutorial", "Admin", new { area = "Admin" })
                    .Create("CreateTutorial", "Admin", new { area = "Admin" });
            })
        .ClientDetailTemplateId("details")
)

<script type="text/kendo-templ" id="details">
    <h5>Steps</h5>
    @(Html.Kendo().Grid<TeamCentaur_LiveChat.Areas.Admin.ViewModels.StepDisplayModel>()
    .Name("steps-grid-#=Id#")
    .Columns(columns =>
    {
        columns.Bound(model => model.Content).Title("Step Content");
        columns.Bound(model => model.Title).Title("Step Title");
        columns.Command(command =>
        {
            command.Edit().Text("Edit Step");
            command.Destroy().Text("Delete Step");
        });
    })
    .Pageable()
    .Sortable(sort =>
        {
            sort.SortMode(GridSortMode.SingleColumn);
        })
        .Editable(edit =>
            {
                edit.Mode(GridEditMode.PopUp);
                edit.TemplateName("StepEdit");
            })
        .DataSource(data =>
            {
                data.Ajax()
                    .Model(m => m.Id(t => t.Id))
                    .PageSize(10)
                    .ServerOperation(true)
                    .Read("GetSteps", "Admin", new { area = "Admin", id = "#=Id#" })
                    .Update("UpdateStep", "Admin", new { area = "Admin" })
                    .Destroy("DeleteStep", "Admin", new { area = "Admin" })
                    .Create("CreateStep", "Admin", new { area = "Admin" });
            })
    .ToClientTemplate()
    )

    <h5>Comments</h5>
    @(Html.Kendo().Grid<TeamCentaur_LiveChat.Areas.Admin.ViewModels.CommentDisplayModel>()
    .Name("comments-grid-#=Id#")
    .Columns(columns =>
    {
        columns.Bound(model => model.Content).Title("Comment content");
        columns.Command(command =>
        {
            command.Destroy().Text("Delete Comment");
        });
    })
    .Pageable()
    .Sortable(sort =>
        {
            sort.SortMode(GridSortMode.SingleColumn);
        })
        .Editable(edit =>
            {
                edit.Mode(GridEditMode.PopUp);
            })
    .Groupable()
        .DataSource(data =>
            {
                data.Ajax()
                    .Model(m => m.Id(t => t.Id))
                    .PageSize(10)
                    .ServerOperation(true)
                    .Read("GetComments", "Admin", new { area = "Admin", id = "#=Id#" })
                    .Destroy("DeleteComment", "Admin", new { area = "Admin" });
            })
    .ToClientTemplate()
    )
</script>